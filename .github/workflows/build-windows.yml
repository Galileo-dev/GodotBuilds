name: "Create weekly build"
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: "godotengine/godot"
          token:
            ${{ secrets.GITHUB_TOKEN }}
            # Make sure the actual branch is checked out when running on pull requests
          ref:
            ${{ github.head_ref }}
            # This is important to fetch the changes to the previous commit
          fetch-depth:
            0
            # clean: "false"

      - name: Install MSVC
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            grep

      - name: Get Version
        shell: msys2 {0}
        run: |
          curl -LO "https://raw.githubusercontent.com/godotengine/godot/master/version.py"
          echo "major=$(grep "major" version.py | cut -d" " -f3)"  >> $GITHUB_ENV
          echo "minor=$(grep "minor" version.py | cut -d" " -f3)" >> $GITHUB_ENV
          echo "patch=$(grep "patch" version.py | cut -d" " -f3)" >> $GITHUB_ENV
          echo "status=$(grep "status" version.py | cut -d" " -f3)" >> $GITHUB_ENV

      - name: Add Version
        shell: msys2 {0}
        run: |
          echo "GOT=${{env.major}}.${{env.minor}}.${{env.patch}}-${{env.status}}" >> $GITHUB_ENV

      - name: Test Version Name
        run: |
          echo "${{env.GOT}}"

      - name: create fake build
        run: |
          dir
          mkdir bin
          cd bin
          fsutil file createnew godot.windows.opt.tools.64.exe 1000
          cd ..

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified

      - name: Install Scons
        run: python -m pip install scons

      - name: Install Choco
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: -h

      - run: choco install yasm make

      - run: ls

      - name: Build GODOT
        run: scons -j6 platform=windows target=release_debug

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/godot.windows.opt.tools.64.exe
          asset_name: godot_win_x64.exe
          tag: ${{env.GOT}}
          overwrite: true
          body: "This is my test release"
